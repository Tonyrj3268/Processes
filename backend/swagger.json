{
  "openapi": "3.0.0",
  "info": {
    "title": "My API",
    "version": "1.0.0",
    "description": "API documentation for Processes"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password, must be at least 6 characters long",
                    "example": "password123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authorization",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "密碼錯誤"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "找不到使用者"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "User registration",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The user's chosen username, must be between 3 and 20 characters long",
                    "example": "john_doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password",
                    "example": "password123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "註冊成功"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "此信箱已被註冊"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comments": {
      "post": {
        "summary": "Create a new comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comments/{commentId}": {
      "patch": {
        "summary": "Update a comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the comment to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the comment to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comments/{commentId}/like": {
      "post": {
        "summary": "Like a comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the comment to like"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment liked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Unlike a comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the comment to unlike"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment unliked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/event": {
      "get": {
        "summary": "Retrieve notifications with pagination",
        "description": "Fetch notifications with details about sender, receiver, timestamp, and event information.",
        "tags": [
          "Event"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sender": {
                            "type": "string",
                            "description": "ID of the sender"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time the notification was created"
                          },
                          "event": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of the event"
                              },
                              "content": {
                                "type": "string",
                                "description": "Template or content of the event"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "events": [
                    {
                      "sender": "5f8f8c44b54764421b7156c9",
                      "timestamp": "2024-10-30T10:15:30Z",
                      "event": {
                        "type": "like",
                        "content": "User xxx liked your post"
                      }
                    },
                    {
                      "sender": "5f8f8c44b54764421b7156c9",
                      "timestamp": "2024-10-30T10:11:30Z",
                      "event": {
                        "type": "follow",
                        "content": "User xxx commented on your post"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/post/{userId}": {
      "get": {
        "summary": "Get personal posts",
        "escription": "Retrieve posts created by a specific user",
        "tags": [
          "貼文"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path"
          }
        ],
        "name": "userId",
        "required": true
      }
    },
    "/api/post": {
      "get": {
        "summary": "獲取貼文列表",
        "description": "取得公開用戶的貼文和自己的貼文\n- 支援無限捲動分頁機制\n- 依照時間順序由新到舊排序\n- 回傳最佳化的資料結構\n",
        "tags": [
          "貼文"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "每頁返回的貼文數量"
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "分頁游標（上一頁最後一篇貼文的建立時間）"
          }
        ],
        "responses": {
          "200": {
            "description": "成功獲取貼文列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "postId": {
                            "type": "string",
                            "description": "貼文唯一識別碼"
                          },
                          "author": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "作者 ID"
                              },
                              "userName": {
                                "type": "string",
                                "description": "作者名稱"
                              },
                              "accountName": {
                                "type": "string",
                                "description": "作者帳號名稱"
                              },
                              "avatarUrl": {
                                "type": "string",
                                "description": "作者頭像網址"
                              }
                            }
                          },
                          "content": {
                            "type": "string",
                            "description": "貼文內容"
                          },
                          "likesCount": {
                            "type": "integer",
                            "description": "按讚數量"
                          },
                          "commentCount": {
                            "type": "integer",
                            "description": "留言數量"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "發文時間"
                          }
                        }
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true,
                      "description": "下一頁的游標值（若為 null 則表示沒有下一頁）"
                    },
                    "hasMore": {
                      "type": "boolean",
                      "description": "是否還有更多貼文可供載入"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "請求參數無效"
          },
          "401": {
            "description": "未經授權的請求"
          },
          "500": {
            "description": "伺服器內部錯誤"
          }
        }
      },
      "post": {
        "summary": "Create a new post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully"
          }
        }
      }
    },
    "/api/post/{postId}": {
      "patch": {
        "summary": "Update a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/post/{postId}/like": {
      "post": {
        "summary": "Like a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to like"
          }
        ],
        "responses": {
          "200": {
            "description": "Post liked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Unlike a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to unlike"
          }
        ],
        "responses": {
          "200": {
            "description": "Post unliked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/post/{postId}/comments": {
      "post": {
        "summary": "Add a comment to a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to comment on"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search/posts": {
      "get": {
        "summary": "Search posts using cursor pagination",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "Cursor for pagination (ID of the last item from previous page)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with posts and next cursor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "postId": {
                            "type": "string"
                          },
                          "author": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "userName": {
                                "type": "string"
                              },
                              "accountName": {
                                "type": "string"
                              },
                              "avatarUrl": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {
                            "type": "string"
                          },
                          "likesCount": {
                            "type": "integer"
                          },
                          "commentCount": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true,
                      "description": "Cursor for the next page, null if no more results"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search/users": {
      "get": {
        "summary": "Search users using cursor pagination",
        "tags": [
          "Search"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "Cursor for pagination (ID of the last item from previous page)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with users and next cursor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "userName": {
                            "type": "string"
                          },
                          "accountName": {
                            "type": "string"
                          },
                          "avatarUrl": {
                            "type": "string"
                          },
                          "bio": {
                            "type": "string"
                          },
                          "followersCount": {
                            "type": "integer"
                          },
                          "followingCount": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true,
                      "description": "Cursor for the next page, null if no more results"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search/comments": {
      "get": {
        "summary": "Search comments using cursor pagination",
        "tags": [
          "Search"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "Cursor for pagination (ID of the last item from previous page)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with comments and next cursor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "commentId": {
                            "type": "string"
                          },
                          "author": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "userName": {
                                "type": "string"
                              },
                              "accountName": {
                                "type": "string"
                              },
                              "avatarUrl": {
                                "type": "string"
                              }
                            }
                          },
                          "content": {
                            "type": "string"
                          },
                          "likesCount": {
                            "type": "integer"
                          },
                          "repliesCount": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true,
                      "description": "Cursor for the next page, null if no more results"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{userId}": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve a user's profile information. If requesting one's own profile, full information is returned, otherwise limited public information is provided.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to retrieve",
            "example": "60f7b4d9f42b5c0018c0b5a5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The user's ID",
                      "example": "60f7b4d9f42b5c0018c0b5a5"
                    },
                    "accountName": {
                      "type": "string",
                      "example": "johndoe123"
                    },
                    "userName": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "description": "Only available if authenticated user is requesting their own profile",
                      "example": "john@example.com"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Passionate about technology and open source."
                    },
                    "avatarUrl": {
                      "type": "string",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "followersCount": {
                      "type": "integer",
                      "example": 120
                    },
                    "followingCount": {
                      "type": "integer",
                      "example": 80
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-21T17:32:28Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "使用者不存在"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user": {
      "patch": {
        "summary": "Update user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "New username for the user",
                    "example": "new_username"
                  },
                  "email": {
                    "type": "string",
                    "description": "New email for the user",
                    "example": "new_email@example.com"
                  },
                  "isPublic": {
                    "type": "boolean",
                    "description": "Whether the user's profile is public",
                    "example": true
                  },
                  "bio": {
                    "type": "string",
                    "description": "Short biography for the user, max 100 characters",
                    "example": "Enthusiastic developer and tech lover.",
                    "maxLength": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "使用者資料已更新"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60f7b4d9f42b5c0018c0b5a5"
                        },
                        "username": {
                          "type": "string",
                          "example": "new_username"
                        },
                        "email": {
                          "type": "string",
                          "example": "new_email@example.com"
                        },
                        "isPublic": {
                          "type": "boolean",
                          "example": true
                        },
                        "bio": {
                          "type": "string",
                          "example": "Enthusiastic developer and tech lover."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "Bio must not exceed 100 characters"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "使用者不存在"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/follow": {
      "post": {
        "summary": "Follow a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user to follow",
                    "example": "5f8f8c44b54764421b7156c9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully followed the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "成功追蹤使用者"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, such as trying to follow oneself or missing/invalid userId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": {
                        "validationError": {
                          "value": "請求內容錯誤"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "找不到或已經追蹤該使用者"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "伺服器發生錯誤"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/unfollow": {
      "post": {
        "summary": "Unfollow a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The mongo objectID of the user to unfollow",
                    "example": "5f8f8c44b54764421b7156c9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully unfollowed the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "成功取消追蹤使用者"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, such as missing/invalid userId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "請求內容錯誤"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "找不到或尚未追蹤該使用者"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "User authentication and registration"
    },
    {
      "name": "Comments",
      "description": "API endpoints for managing comments"
    },
    {
      "name": "Event",
      "description": "User's events, only accessible to authenticated users"
    },
    {
      "name": "Posts",
      "description": "API endpoints for managing posts"
    },
    {
      "name": "Search",
      "description": "Search API endpoints"
    },
    {
      "name": "Users",
      "description": "User management"
    }
  ]
}